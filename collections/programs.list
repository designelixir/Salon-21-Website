<script>
var events = [] 
function createEvent(eventTitle, eventStartMonth, eventStartDay, eventEndMonth, eventEndDay, fullUrl){
  
  var event = [eventTitle, eventStartMonth, eventStartDay, eventEndMonth, eventEndDay, fullUrl]
  events.push(event);

}
</script>
<div id="calendarWrapper">
  <div class="flex-center-center textured-bg" id="month-list"></div>
  <div id="calendar-container" class="textured-bg"></div>
</div>

<i style="text-align: center;">Note that dates and info are subject to change. <br> Please check back and join our mailing list for upcoming event updates.  </i>


{.repeated section items}
{#  title, start Month, start day, end month, end day, full url  }
<script>createEvent("{title}", {structuredContent.startDate|date %m}, {structuredContent.startDate|date %e}, {structuredContent.endDate|date %m}, {structuredContent.endDate|date %e}, "{fullUrl}")</script>
{.end}
<div class="flex-center-center" style="padding: 20px;width: 100%;">
  <p>{collection.description}</p>
</div>

<script>


 var monthListDiv = document.getElementById('month-list')
  
const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
function createCalendar(month, year) {
  const firstDayOfMonth = new Date(year, month, 1);
  const lastDayOfMonth = new Date(year, month + 1, 0);
  const numDaysInMonth = lastDayOfMonth.getDate();
  const startingDayOfWeek = firstDayOfMonth.getDay();

  const table = document.createElement('table');
  table.id = month + '-table'
  

  if (month === currentMonth){
    table.classList.add('active-calendar-table')
  } else {
    table.classList.add('hidden-calendar-table')
  }
  


  const headerRow = table.insertRow();
  for (const dayOfWeek of daysOfWeek) {
    const th = document.createElement('th');
    th.innerText = dayOfWeek;
    headerRow.appendChild(th);
  }

  let currentDate = 1;
  for (let i = 0; i < 6; i++) { // Maximum 6 rows for the calendar
    const weekRow = table.insertRow();
    for (let j = 0; j < 7; j++) {
      const cell = weekRow.insertCell();
      if (i === 0 && j < startingDayOfWeek) {
        cell.innerHTML = '<div class="date-cell dead-date"></div>';
        
      } else if (currentDate <= numDaysInMonth) {
        var cellDate = []
        cell.innerHTML = '<div class="date-cell live-date" id="'+ currentDate +'" data-cell-month="' + month +'"><div class="date-cell-day">'+ currentDate +'</div></div>';
        currentDate++;
      }
    }
  }

  return table.outerHTML;
}

{#  remove stuff from parenthesis when september passes  }
  var currentDate = new Date(2023, 8 );
  var currentMonth = currentDate.getMonth(); 
  var year = currentDate.getFullYear();

const calendar = createCalendar(currentMonth, year);
var calContainer = document.getElementById('calendar-container')

calContainer.innerHTML = calendar;

function createNextFourCalendars(monthsList){
  for (var i = 0; i <= monthsList.length - 1; i++){
    
    var newCalendar = createCalendar(monthsList[i], year)
    
    
    calContainer.innerHTML += newCalendar
}
}


function getNextFourMonths() {
  var currentMonthLabel = '<h6 class="month-label active-month-label" id="'+ currentMonth + '-label" onclick="toggleMonths('+ currentMonth +')" >' + `${monthNames[currentMonth]}` + '</h6>'
  monthListDiv.innerHTML += currentMonthLabel;
  var monthsList = []; 
  var monthsNumberList = []
  
  for (var i = 0; i < 4; i++) {
      var nextMonth = (currentMonth + 1 + i) % 12; 
      monthsNumberList.push(nextMonth)
      var nextMonthName = new Date(0, nextMonth).toLocaleDateString('en-US', { month: 'long' }); // Get the month name
      monthsList.push(nextMonthName); 
  }

  for (var i = 0; i < monthsNumberList.length; i++){
    var workingMonth = monthNames[monthsNumberList[i]]
    var monthLabel = '<h6 class="month-label" onclick="toggleMonths('+ monthsNumberList[i] +')" id="'+ monthsNumberList[i] +'-label">' + monthsList[i] + '</h6>'
    monthListDiv.innerHTML +=  monthLabel ;
  }
  createNextFourCalendars(monthsNumberList)
  return monthsList

}

// Call the function to get the list of next four months
var nextFourMonths = getNextFourMonths();


function addEvent(eventList){
  
  for (var i = 0; i < eventList.length; i++){
    var event = eventList[i];
    var eventTitle = "<div class='event-details'><p>" + event[0] + "</p></div>"
    
    var monthNum = event[1];
      var monthName =  (monthNum - 1) + '-table'
      
      if ((event[4] - event[2]) === 0){
        console.log("got here" + event[2] + event[0] + " " + monthName)
        $("#" + monthName).find('td #' + event[2]).append(eventTitle)
        $("#" + monthName).find('td #' + event[2]).addClass('has-event')
      } else {
        console.log("else " + event[2] + event[0] + " " + monthName)
        var eventRange = event[4] - event[2];
        for (i = 0; i < eventRange + 1; i++){
          var nextDay = event[2] + i
          $("#" + monthName).find('td #' + nextDay).append(eventTitle)
          $("#" + monthName).find('td #' + nextDay).addClass('has-event')
        }
      }
      
    
  }
}

addEvent(events)

function toggleMonths(monthName){
  var id = monthName + '-table';
  var labelId = monthName + '-label'
  $('.active-calendar-table').addClass('hidden-calendar-table')
  $('.active-calendar-table').removeClass('active-calendar-table')
  $('#' + id).addClass('active-calendar-table')
  $('.active-month-label').removeClass('active-month-label')
  $('#' + labelId).addClass('active-month-label')
}

var clickableMonths = document.getElementsByClassName('month-label')





function colorCalendar(){
  var dateCells = document.getElementsByClassName('date-cell');
  var counter = 1;
  for (var i = 0; i < dateCells.length; i++){
    counter++;
    if (counter > 3){
      counter = 1;
    }
    if (counter === 1){
      dateCells[i].classList.add("cal-color-1")
      
    } else if (counter === 2) {
      dateCells[i].classList.add("cal-color-2")
      
    } else if (counter === 3) {
      
      dateCells[i].classList.add('cal-color-3')
    }
  }
  
}
colorCalendar();


</script>
<style>
	.custom-bg-region {background-repeat: no-repeat; background-position: center 50px; padding-top: 50px;}
</style>
<header class="site-header">
	<h1 class="hover" onclick="window.open('{collection.fullUrl}','_self')"  id="page-title-h1">{collection.title}</h1>
	{.if item.title}<h1><span class="red-text sub-title">{item.title}</h1>{.end}
</header>
{@|apply calendarBuilder.block}
<script>
	var events = [] 
	var exhibitionEvents = []
	var specialEvents = []


	var ongoingEvents = []
	function createEvent(eventTitle, eventStartMonth, eventStartDay, eventEndMonth, eventEndDay, fullUrl, startTime, endTime, militaryTime, hasTime, excerpt){
	  var event = [eventTitle, eventStartMonth, eventStartDay, eventEndMonth, eventEndDay, fullUrl, "regular-event", startTime, endTime, militaryTime, hasTime, excerpt]
	  events.push(event);
	}
	
	function createExhibitionEvent(eventTitle, eventStartMonth, eventStartDay, eventEndMonth, eventEndDay, fullUrl){
	  var exhibitionEvent = [eventTitle, eventStartMonth, eventStartDay, eventEndMonth, eventEndDay, fullUrl, "exhibition-event"]
	  
	  exhibitionEvents.push(exhibitionEvent)
	}
	
	function createSpecialEvent(eventTitle, eventStartMonth, eventStartDay, eventEndMonth, eventEndDay, fullUrl, excerpt){
	  var specialEvent = [eventTitle, eventStartMonth, eventStartDay, eventEndMonth, eventEndDay, fullUrl, "special-event", excerpt]
	  specialEvents.push(specialEvent)
	}
</script>

{.repeated section items}

	
	{.equal? customContent.customType "eventOngoing"}
		<script>
			var ongoingTitle = "{title}";
			var ongoingStartMonth = {structuredContent.startDate|date %m} - 1;
			var ongoingStartDate = {structuredContent.startDate|date %e};
			var ongoingEndMonth = {structuredContent.endDate|date %m} - 1;
			var ongoingEndDate = {structuredContent.endDate|date %e}
			var ongoingDateCell = String(ongoingStartMonth) + "-" + String(ongoingStartDate)
			
			{.if sourceUrl} 
				var ongoingDestinationUrl = `{sourceUrl}`
			{.or} 
				var ongoingDestinationUrl =`{fullUrl}`
			{.end}
			{.if customContent.showTime} 
				var ongoingShowTime = true 
			{.or} 
				var ongoingShowTime = false 
			{.end}
			{.if customContent.programClickable} 
				var ongoingPopup = true; 
			{.or} 
				var ongoingPopup = false 
			{.end}
			
			var eventTitle = "<div class='event-details ongoing-event event-container has-time' data-military-time={structuredContent.startDate|date %H} onclick='toggleEventPopup("+ ongoingDestinationUrl +")'><p class='{.if customContent.programClickable} hover {.end}event-details-title ongoing-event-title'>" + ongoingTitle + "</p></div>"
			var ongoingEventRange = (ongoingEndDate - ongoingStartDate);
			if(ongoingEventRange > 0){
				
				console.log(ongoingEventRange)
				for (i = 0; i < ongoingEventRange + 1; i++){
					var nextDay = ongoingStartDate + i
					var ongoingDateCellMulti = String(ongoingStartMonth) + "-" + String(ongoingStartDate + i)
					$("#" + ongoingDateCellMulti).append(eventTitle)
					$("#" + ongoingDateCellMulti).addClass('has-event')
				}
				console.log(ongoingStartMonth)
			} else {}
		</script>
	{.end}

	{.equal? customContent.customType "eventSpecial"}
		<script>
			var specialTitle = "{title}";
			var specialStartMonth = {structuredContent.startDate|date %m} - 1;
			var specialStartDate = {structuredContent.startDate|date %e};
			var specialEndMonth = {structuredContent.endDate|date %m} - 1;
			var specialEndDate = {structuredContent.endDate|date %e}
			var specialDateCell = String(specialStartMonth) + "-" + String(specialStartDate)
			{.if customContent.showTime} 
				var specialShowTime = "<span class='event-time'>{structuredContent.startDate|date %l:%M %p} to {structuredContent.endDate|date %l:%M %p}</span>"
			{.or} 
				var specialShowTime = ""
			{.end}
			
			{.if customContent.programClickable} 
				{.if sourceUrl} 
				
				var specialContainer = "<div class='event-details {.if starred}special-event {.or} regular-event {.end} event-container {.if customContent.showTime}has-time' data-military-time={structuredContent.startDate|date %H} {.or}' {.end} onclick='window.open("+ {sourceUrl} +")'>"
				{.or} 
					var source = `"https://salontwenty-one.com/programs/" + "{urlId}"`
					var specialContainer = "<div class='event-details {.if starred}special-event {.or} regular-event {.end} event-container {.if customContent.showTime}has-time' data-military-time={structuredContent.startDate|date %H} {.or}' {.end} onclick='toggleEventPopup("+ source +")'>"
				{.end}
			{.or} 
				var specialContainer = "<div class='event-details  {.if starred}special-event {.or} regular-event {.end} event-container {.if customContent.showTime}has-time' data-military-time={structuredContent.startDate|date %H} {.or}' {.end}>"
			{.end}
			
			{.if excerpt}
				var specialExcerpt = "<span class='event-excerpt'> - " + `{excerpt|safe}` + "</span>"
				{.or}
				var specialExcerpt = ""
			{.end}
			{#  console.log(specialTitle, specialStartMonth, specialStartDate, specialEndMonth, specialEndDate, specialDateCell, specialDestinationUrl, specialShowTime, specialPopup)  }
			
			var specialEvent = specialContainer + "<p class='{.if customContent.programClickable} hover {.end} event-details-title {.if starred}special-event-title {.or} regular-event-title {.end}'>" + specialTitle +  specialExcerpt + "<br>" + specialShowTime + "</p></div>"
			var specialEventRange = (specialEndDate - specialStartDate);
			$("#" + specialDateCell).append(specialEvent)
		
			
		</script>
	{.end}
{.end}
<div id="eventPopup" class="flex-start-start flex-column" style="display: none" onclick="toggleEventPopup('')">
	<div id="eventPopupClose" onclick="toggleEventPopup('')" class="hover">Close</div>
	<iframe id="eventIframe"></iframe>
</div>
<script>

function toggleEventPopup(source){
	console.log("clickaru")
	if (document.getElementById('eventPopup').style.display === "none"){
		document.getElementById('eventPopup').style.display = "flex";
		document.getElementById('eventIframe').src = source
		
	} else if (document.getElementById('eventPopup').style.display === "flex") {
		document.getElementById('eventIframe').src = ""
		document.getElementById('eventPopup').style.display = "none";
	}
}
	
	function addEvent(eventList){
	 for (var i = 0; i < eventList.length; i++){
	  	var event = eventList[i];
	  	var monthNum = event[1];
    	var monthName =  (monthNum - 1) + '-table'
    if (event[6] === 'exhibition-event'){var eventTitle = "<div class='event-details "+ event[6]+"'><p class='hover event-details-title' onclick=window.open('"+ String(event[5]) +"')>" + event[0] + "</p></div>"}
    else if(event[6] === 'special-event'){var eventTitle = "<div class='event-details "+ event[6]+"'><p class='hover event-details-title' onclick=window.open('"+ String(event[5]) +"')>" + event[0] + "<br>"+ event[7] + "</p></div>"}
    else {var eventTitle = "<div class='event-details " + event[6]+" "+ String(event[10])+"' data-military-time="+ event[9] +"><p class='hover event-details-title' onclick=window.open('"+ String(event[5]) +"')><span style='font-weight: 600; color: black!important'>" + event[0] + "</span> - "+ event[7] + event[8] + "</p><br>"+ event[11]+"</div>"}
	     
    if ((event[4] - event[2]) === 0){
      var targetDiv = "#" + (event[1] - 1) + "-" + event[2];
      $("#" + monthName).find("#" + (event[1] - 1) + "-" + event[2] +" .event-container").append(eventTitle)
      $("#" + monthName).find("#" + (event[1] - 1) + "-" + event[2]).addClass('has-event')
	  } else {
    
    }
	 }
	 $(".date-cell").has(".special-event").css("border", "3px solid white");
	
	}
	
	addEvent(exhibitionEvents)
	addEvent(events)
	addEvent(specialEvents)
	
	
	

	
	
	
{#  After calendar has been loaded  }
	
 function orderEvents(list){
	for(i=0; i<list.length; i++){
		var time = $(list[i]).attr("data-military-time");
		$(list[i]).css("order", time);
	}
 }
 {#  Organize events on day by start times  }
 var hasTimeList = document.getElementsByClassName('has-time');
 orderEvents(hasTimeList)
 

 function setTallestTDHeight() {
  const tdElements = document.getElementsByTagName('td');
  
  let tallestHeight = 0;
  for (const td of tdElements) {
    const tdHeight = td.clientHeight;
    if (tdHeight > tallestHeight) {
      tallestHeight = tdHeight;
    }
  }
  for (const td of tdElements) {
    td.style.height = tallestHeight + 'px!important';
  }
}
setTallestTDHeight();

</script>

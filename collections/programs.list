<style>
	.custom-bg-region {background-repeat: no-repeat; background-position: center 50px; padding-top: 50px;}
</style>
{@|apply header.block}
<header class="site-header">
	<h1 class="hover" onclick="window.open('{collection.fullUrl}','_self')"  id="page-title-h1">{collection.title}</h1>
	{.if item.title}<h1><span class="red-text sub-title">{item.title}</h1>{.end}
</header>
{@|apply calendarBuilder.block}
{@|apply footer.block}

{.repeated section items}
	{.equal? customContent.customType "eventOngoing"}
		<script>
			var ongoingTitle = "{title}";
			var ongoingStartMonth = {structuredContent.startDate|date %m} - 1;
			var ongoingStartDate = {structuredContent.startDate|date %e};
			var ongoingEndMonth = {structuredContent.endDate|date %m} - 1;
			var ongoingEndDate = {structuredContent.endDate|date %e}
			var ongoingDateCell = String(ongoingStartMonth) + "-" + String(ongoingStartDate)
			
			{.if customContent.showTime} 
				var ongoingTime = "<span class='event-time'>{structuredContent.startDate|date %l:%M %p} to {structuredContent.endDate|date %l:%M %p}</span>"
			{.or} 
				var ongoingTime = "";
			{.end}

			{.if customContent.programClickable}
				{.if sourceUrl}
				var source = `onclick='window.open("{sourceUrl}")'`
				console.log(source)
				var ongoingContainer = "<div class='event-details ongoing-event event-container has-time clickable' data-military-time={structuredContent.startDate|date %H}>"
				{.or}
				var source = `onclick='toggleEventPopup("https://salontwenty-one.com/programs/" + "{urlId}")'`
				console.log(source)
				{.end}
				var ongoingContainer = "<div class='event-details ongoing-event event-container has-time hover clickable' data-military-time={structuredContent.startDate|date %H} " + source +">"

			{.or}
				var ongoingContainer = "<div class='event-details ongoing-event event-container has-time non-clickable' data-military-time={structuredContent.startDate|date %H}>"
			{.end}
			
			
			
			var eventTitle = ongoingContainer + "<p class='event-details-title ongoing-event-title'>" + ongoingTitle + ongoingTime + "</p></div>"
			var ongoingEventRange = (ongoingEndDate - ongoingStartDate);
			if(ongoingEventRange > 0){
				console.log(ongoingEventRange)
				for (i = 0; i < ongoingEventRange + 1; i++){
					var nextDay = ongoingStartDate + i
					var ongoingDateCellMulti = String(ongoingStartMonth) + "-" + String(ongoingStartDate + i)
					$("#" + ongoingDateCellMulti + " .event-wrapper").append(eventTitle)
					$("#" + ongoingDateCellMulti).addClass('has-event')
				}
				console.log(ongoingStartMonth)
			} else {}
		</script>
	{.end}

	{.equal? customContent.customType "eventSpecial"}
		<script>
			var specialTitle = "{title}";
			var specialStartMonth = {structuredContent.startDate|date %m} - 1;
			var specialStartDate = {structuredContent.startDate|date %e};
			var specialEndMonth = {structuredContent.endDate|date %m} - 1;
			var specialEndDate = {structuredContent.endDate|date %e}
			var specialDateCell = String(specialStartMonth) + "-" + String(specialStartDate)
			{.if customContent.showTime} 
				var specialShowTime = "<span class='event-time'>{structuredContent.startDate|date %l:%M %p} to {structuredContent.endDate|date %l:%M %p}</span>"
			{.or} 
				var specialShowTime = ""
			{.end}
			
			{.if customContent.programClickable} 
				{.if sourceUrl} 
				
				var specialContainer = "<div class='event-details{.if starred}special-event {.or} regular-event {.end} event-container {.if customContent.showTime}has-time' data-military-time={structuredContent.startDate|date %H} {.or}' {.end} onclick='window.open("+ {sourceUrl} +")'>"
				{.or} 
					var source = `"https://salontwenty-one.com/programs/" + "{urlId}"`
					var specialContainer = "<div class='event-details {.if starred}special-event {.or} regular-event {.end} event-container {.if customContent.showTime}has-time' data-military-time={structuredContent.startDate|date %H} {.or}' {.end} onclick='toggleEventPopup("+ source +")'>"
				{.end}
			{.or} 
				var specialContainer = "<div class='event-details non-clickable {.if starred}special-event {.or} regular-event {.end} event-container {.if customContent.showTime}has-time' data-military-time={structuredContent.startDate|date %H} {.or}' {.end}>"
			{.end}
			
			{.if excerpt}
				var specialExcerpt = "<br class='mobile-breaks'><span class='event-excerpt'> " + `{excerpt|safe}` + "</span>"
				{.or}
				var specialExcerpt = ""
			{.end}
			
			
			var specialEvent = specialContainer + "<p class='{.if customContent.programClickable} hover {.end} event-details-title {.if starred}special-event-title {.or} regular-event-title {.end}'>" + specialTitle +  specialExcerpt + "<br class='mobile-breaks'>" + specialShowTime + "</p></div>"
			var specialEventRange = (specialEndDate - specialStartDate);
			$("#" + specialDateCell + " .event-wrapper").append(specialEvent)
			$("#" + specialDateCell ).addClass('has-event')
			{.if starred}
				$("#" + specialDateCell).addClass('special-event-border')
			{.end}
			
		</script>
	{.end}
{.end}
<div id="eventPopup" class="flex-start-start flex-column" style="display: none" onclick="toggleEventPopup('')">
<div style="border: 3px solid white; width: 100vw; height: 100vh;">
	<div id="eventPopupClose" onclick="toggleEventPopup('')" class="hover">Close</div>
	<iframe id="eventIframe"></iframe>
	</div>
</div>
<script>

function toggleEventPopup(source){
	console.log("clickaru")
	if (document.getElementById('eventPopup').style.display === "none"){
		document.getElementById('eventPopup').style.display = "flex";
		document.getElementById('eventIframe').src = source;
		
		
	} else if (document.getElementById('eventPopup').style.display === "flex") {
		document.getElementById('eventIframe').src = ""
		document.getElementById('eventPopup').style.display = "none";
		
	}
}
	
	

	
{#  After calendar has been loaded  }
	
 function orderEvents(list){
	for(i=0; i<list.length; i++){
		var time = $(list[i]).attr("data-military-time");
		$(list[i]).css("order", time);
	}
 }
 {#  Organize events on day by start times  }
 var hasTimeList = document.getElementsByClassName('has-time');
 orderEvents(hasTimeList)
 

</script>

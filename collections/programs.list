<style>
	.custom-bg-region {background-repeat: no-repeat; background-position: center 50px; padding-top: 50px;}
</style>
<script>
	var events = [] 
	var exhibitionEvents = []
	var specialEvents = []
	function createEvent(eventTitle, eventStartMonth, eventStartDay, eventEndMonth, eventEndDay, fullUrl, startTime, endTime, militaryTime, hasTime, excerpt){
	  var event = [eventTitle, eventStartMonth, eventStartDay, eventEndMonth, eventEndDay, fullUrl, "regular-event", startTime, endTime, militaryTime, hasTime, excerpt]
	  events.push(event);
	}
	
	function createExhibitionEvent(eventTitle, eventStartMonth, eventStartDay, eventEndMonth, eventEndDay, fullUrl){
	  var exhibitionEvent = [eventTitle, eventStartMonth, eventStartDay, eventEndMonth, eventEndDay, fullUrl, "exhibition-event"]
	  
	  exhibitionEvents.push(exhibitionEvent)
	}
	
	function createSpecialEvent(eventTitle, eventStartMonth, eventStartDay, eventEndMonth, eventEndDay, fullUrl, excerpt){
	  var specialEvent = [eventTitle, eventStartMonth, eventStartDay, eventEndMonth, eventEndDay, fullUrl, "special-event", excerpt]
	  specialEvents.push(specialEvent)
	}
	
</script>

{.repeated section items}
  {.if starred}
    {.if sourceUrl}
	<script>createSpecialEvent("{title}", {structuredContent.startDate|date %m}, {structuredContent.startDate|date %e}, {structuredContent.endDate|date %m}, {structuredContent.endDate|date %e}, "{sourceUrl}", '{excerpt|html}')</script>
	{.or}
	<script>createSpecialEvent("{title}", {structuredContent.startDate|date %m}, {structuredContent.startDate|date %e}, {structuredContent.endDate|date %m}, {structuredContent.endDate|date %e}, "{fullUrl}", '{excerpt}')</script>
	{.end}
  {.or}
    {.if categories}
      {.if sourceUrl}
	  <script>createExhibitionEvent("{title}", {structuredContent.startDate|date %m}, {structuredContent.startDate|date %e}, {structuredContent.endDate|date %m}, {structuredContent.endDate|date %e}, "{sourceUrl}")</script>
	  {.or}
	  <script>createExhibitionEvent("{title}", {structuredContent.startDate|date %m}, {structuredContent.startDate|date %e}, {structuredContent.endDate|date %m}, {structuredContent.endDate|date %e}, "{fullUrl}")</script>
	  {.end}
    {.or}
      {.if sourceUrl}
	  <script>createEvent("{title}", {structuredContent.startDate|date %m}, {structuredContent.startDate|date %e}, {structuredContent.endDate|date %m}, {structuredContent.endDate|date %e}, "{sourceUrl}", {.if customContent.showTime}"<br><span class='event-time'>{structuredContent.startDate|date %l:%M %p} to", "{structuredContent.endDate|date %l:%M %p}</span>", {structuredContent.startDate|date %H}, "has-time"{.or}"", "", "", ""{.end}, {excerpt} )</script>
	  	{.or}
		<script>createEvent("{title}", {structuredContent.startDate|date %m}, {structuredContent.startDate|date %e}, {structuredContent.endDate|date %m}, {structuredContent.endDate|date %e}, "{fullUrl}", {.if customContent.showTime}"<br><span class='event-time'>{structuredContent.startDate|date %l:%M %p} to", "{structuredContent.endDate|date %l:%M %p}</span>", {structuredContent.startDate|date %H}, "has-time"{.or}"", "", "", ""{.end}, {excerpt} )</script>{.end}
    {.end}
  {.end}
{.end}

<script>
	
	


	
	function addEvent(eventList){
	 for (var i = 0; i < eventList.length; i++){
	  var event = eventList[i];
	  var monthNum = event[1];
    var monthName =  (monthNum - 1) + '-table'
    if (event[6] === 'exhibition-event'){var eventTitle = "<div class='event-details "+ event[6]+"'><p class='hover event-details-title' onclick=window.open('"+ String(event[5]) +"')>" + event[0] + "</p></div>"}
    else if(event[6] === 'special-event'){var eventTitle = "<div class='event-details "+ event[6]+"'><p class='hover event-details-title' onclick=window.open('"+ String(event[5]) +"')>" + event[0] + "<br>"+ event[7] + "</p></div>"}
    else {var eventTitle = "<div class='event-details " + event[6]+" "+ String(event[10])+"' data-military-time="+ event[9] +"><p class='hover event-details-title' onclick=window.open('"+ String(event[5]) +"')><span style='font-weight: 600; color: black!important'>" + event[0] + "</span> - "+ event[7] + event[8] + "</p><br>"+ event[11]+"</div>"}
	     
    if ((event[4] - event[2]) === 0){
      var targetDiv = "#" + (event[1] - 1) + "-" + event[2];
      $("#" + monthName).find("#" + (event[1] - 1) + "-" + event[2] +" .event-container").append(eventTitle)
      $("#" + monthName).find("#" + (event[1] - 1) + "-" + event[2]).addClass('has-event')
	  } else {
      var eventRange = event[4] - event[2];
	  
      for (i = 0; i < eventRange + 1; i++){
        var nextDay = event[2] + i
        $("#" + monthName).find("#" + (event[1] - 1) + "-" + nextDay +" .event-container").append(eventTitle)
        $("#" + monthName).find("#" + (event[1] - 1) + "-" + nextDay).addClass('has-event')
      }
    }
	 }
	 $(".date-cell").has(".special-event").css("border", "3px solid white");
	
	}
	
	addEvent(exhibitionEvents)
	addEvent(events)
	addEvent(specialEvents)
	
	
	

	
	
	
{#  After calendar has been loaded  }
	
 function orderEvents(list){
	for(i=0; i<list.length; i++){
		var time = $(list[i]).attr("data-military-time");
		$(list[i]).css("order", time);
	}
 }
 {#  Organize events on day by start times  }
 var hasTimeList = document.getElementsByClassName('has-time');
 orderEvents(hasTimeList)
 

 function setTallestTDHeight() {
  const tdElements = document.getElementsByTagName('td');
  
  let tallestHeight = 0;
  for (const td of tdElements) {
    const tdHeight = td.clientHeight;
    if (tdHeight > tallestHeight) {
      tallestHeight = tdHeight;
    }
  }
  for (const td of tdElements) {
    td.style.height = tallestHeight + 'px!important';
  }
}
setTallestTDHeight();

</script>


<script>
var eventList = []
function isDateInFutureOrPast(start, end, id) {
  const today = new Date();
  const targetDiv = document.getElementById(id)
  const startDate = new Date(start)
  const endDate = new Date(end)
var eventTypeDiv = document.getElementById("eventType-" + id)

  if (startDate > today) {
    targetDiv.classList.add("future-event")
    eventTypeDiv.innerHTML = "Upcoming"
  } else if (startDate < today && endDate > today){
    targetDiv.classList.add("current-event")
    eventTypeDiv.innerHTML = "<span style='background-color: rgba(255,255,255,0.5); color: black; padding: 2px;'>On View</span>"
  } else if (startDate < today) {
    targetDiv.classList.add("past-event")
    eventTypeDiv.innerHTML = "Past Event"
  }  else {
    console.log("no event defined")
  }
  eventList.push({id, start});
}
console.log(eventList)
</script>

<section id="exhibitions-list">

<div class="exhibitions-panel flex-start-start">
  <h5 id="on-view-cat" class="active-cat hover" onclick="toggleSections('onview')">On View & Upcoming</h5>
  <h5 >&nbsp;/&nbsp;</h5>
  <h5 id="archive-cat" class="hover" onclick="toggleSections('archive')">Archive</h5>
</div>
<div class="flex-start-spacebetween frames-container">
  <img src="../assets/frame-decor.svg" alt="decorative frame">
  <img src="../assets/frame-decor.svg" alt="decorative frame" style="transform: scaleX(-1)">
</div>

<div id="events-list" class="flex-center-center flex-column">

<div id="noExhibitions" style="display: none;">
  <p style="padding: 20px; text-align: center;"><i>No events to show</i></p>
</div>



{.if items}
  {.repeated section items}
    
      <div class="exhibition textured-bg fade-in"  id="{id}" data-event-date="{structuredContent.startDate|date %Y-%m-%dT%T}">
          <div class="exhibition-content">
              {.if customContent.dateNotDefined}<h6 class="red-text"><span class="exhibition-type-label" id="eventType-{id}"></span><br style="margin-bottom: 10px;">{structuredContent.startDate|date %B %Y}</h6>{.or}
              <h6 class="red-text"><span class="exhibition-type-label" id="eventType-{id}"></span><br style="margin-bottom: 10px;"> {structuredContent.startDate|date %B %e} - {structuredContent.endDate|date %B %e, %Y} </h6>
              {.end}
              
              <h3 onclick="window.open('{.if sourceUrl}{sourceUrl} {.or}{fullUrl}{.end}', '_self')">{title}</h3>
              
              {.if excerpt}
                <p class="light-weight" style="font-size: 12px!important;"><i>{excerpt}</i></p>
              {.end}
              <script>isDateInFutureOrPast(`{structuredContent.startDate|date %Y-%m-%dT%T}`, `{structuredContent.endDate|date %Y-%m-%dT%T}`, `{id}`)</script>
              
                {.if customContent.hideArtistTags}
                {.or}
                
                {.if tags}
                <img src="../assets/spear.svg" alt="decorative frame" style=" margin-right: 10px;">
                <div class="artist-tags-wrapper flex-start-start flex-wrap">

                  {.repeated section tags}
                    <a class="artist-tag hover" target="_blank" href="/artists/{@|slugify}">{@}</a>
                  {.end}
                  <script>$('.artist-tags-wrapper a').sort(function(a, b) {
                      return $(a).text().localeCompare($(b).text());
                    }).appendTo('.artist-tags-wrapper');</script>
                  </div>
                {.end}
                {.end}
              
              
          </div>
      
      </div>
    
  {.end}
  {.or}
    <p>No events that fit this criteria.</p>
  {.end}
</div>

<div class="flex-start-spacebetween frames-container" style="margin-top: -50px;">
  <img src="../assets/frame-decor.svg" alt="decorative frame" style="transform: scaleY(-1)">
  <img src="../assets/frame-decor.svg" alt="decorative frame" style="transform: rotate(180deg)">
</div>


</section>


<script>
console.log(eventList)
function sortByStartDate(arr) {
  // Use the sort() method with a custom comparison function
  arr.sort((a, b) => {
    const dateA = new Date(a.start);
    const dateB = new Date(b.start);

    // Compare the dates
    if (dateA < dateB) {
      return -1;
    } else if (dateA > dateB) {
      return 1;
    } else {
      return 0;
    }
  });
  rearrangeDivs(arr)
  return arr;
}
sortByStartDate(eventList)

function rearrangeDivs(arr){
  const sortedDivs = arr;
  console.log("array is ", arr)
  for (i=0; i<sortedDivs.length; i++){
    var orderTarget = sortedDivs[i].id;
    document.getElementById(orderTarget).style.order = i;
  }
}

function toggleSections(section){
  var events = document.getElementsByClassName('exhibition')
  var eventsLength = events.length;

  

  var archivedEvents = document.getElementsByClassName('past-event')
  var archivedEventsLength = archivedEvents.length;

  var currentEvents = document.getElementsByClassName('current-event')
  var currentEventsLength = currentEvents.length;

  var futureEvents = document.getElementsByClassName('future-event')
  var futureEventsLength = futureEvents.length; 

  if (archivedEventsLength === 0 && section === 'archive'){
    document.getElementById('noExhibitions').style.display = "block"
  } else {
    document.getElementById('noExhibitions').style.display = "none"
  }


  for (i=0; i < eventsLength; i++){
    events[i].classList.remove('show-event')
  }
  if (section === 'onview'){
    document.getElementById('archive-cat').classList.remove('active-cat')
    document.getElementById('on-view-cat').classList.add('active-cat')
    for (i=0; i < currentEventsLength; i++){
      currentEvents[i].classList.add('show-event')
      
    }
    for (i=0; i < futureEventsLength; i++){
      futureEvents[i].classList.add('show-event')
      
    }

    
  } else {
    document.getElementById('archive-cat').classList.add('active-cat')
    document.getElementById('on-view-cat').classList.remove('active-cat')
    for (i=0; i < archivedEventsLength; i++){
      archivedEvents[i].classList.add('show-event')
    }
  }
}

toggleSections('onview')

</script>
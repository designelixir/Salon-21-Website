<style>
#calendarWrapper { max-width: 1100px;}
#month-list {margin-bottom: 25px;}
.month-label {padding: 15px 20px 10px; font-size: 18px; cursor: pointer;}
.active-month-label {background-image: url('../assets/circled-event-1.png'); background-size: 100% 100%; background-repeat: no-repeat; background-position: center center;}

.dead-date {display: none!important;}
.date-cell {  height: 100%; width: 100%; }
.day-of-week {display: none;}
.day-wrapper {font-family: 'Armoire', sans-serif; padding: 4px; font-weight: 900; background: rgba(255,255,255,0.2); opacity: 0.75; color: white; font-size: 18px; }
</style>

{#  Calendar Framework  }

<div id="calendarWrapper" class="textured-bg">
    <div class="flex-center-center flex-wrap" id="month-list"></div>
    <div id="calendar-container"></div>
</div>
<div class="inner-content-container flex-center-center flex-column" style="margin-top: 50px;">
    <squarespace:block-field id="eventsContent" columns="12"/>
</div>



<script>
	var monthListDiv = document.getElementById('month-list');
    const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
    {#  Creates the calendar grid boxes  }
    function createCalendar(month, year) {
        const firstDayOfMonth = new Date(year, month, 1);
        const lastDayOfMonth = new Date(year, month + 1, 0);
        const numDaysInMonth = lastDayOfMonth.getDate();
        const startingDayOfWeek = firstDayOfMonth.getDay();
        const table = document.createElement('table');
        table.id = month + '-table'

        {# Marks the current month with a circle    }
        if (month === currentMonth){table.classList.add('active-calendar-table')} 
        else {table.classList.add('hidden-calendar-table')}
        
        const headerRow = table.insertRow();
        for (const dayOfWeek of daysOfWeek) {
            const th = document.createElement('th');
            th.innerText = dayOfWeek;
            headerRow.appendChild(th);
        }
    
        let currentDate = 1;
        for (let i = 0; i < 6; i++) {
        const weekRow = table.insertRow();
        for (let j = 0; j < 7; j++) {
            const cell = weekRow.insertCell();
            if (i === 0 && j < startingDayOfWeek) {cell.innerHTML = '<div "class=" dead-date" style="height: 0px!important;"></div>'; } 
            else if (currentDate <= numDaysInMonth) {
                var cellDate = []
                cell.innerHTML = '<div class="date-cell live-date"  id="'+ month +'_'+ currentDate +'"><div class="date-cell-day"><div class="day-wrapper"><span class="day-of-week">'+ daysOfWeek[j] +'</span>'+ currentDate +'</div></div><div class="event-wrapper"></div></div>';
                currentDate++;
            }
        }
        }
        return table.outerHTML;
    }
	
	
	{#  remove stuff from parenthesis when september passes  }
    var currentDate = new Date();
    var currentMonth = currentDate.getMonth(); 
    var year = currentDate.getFullYear();
	
	const calendar = createCalendar(currentMonth, year);
	var calContainer = document.getElementById('calendar-container')
	
	calContainer.innerHTML = calendar;
		
		function createNextFourCalendars(monthsList){
		 for (var i = 0; i <= monthsList.length - 1; i++){
		   var newCalendar = createCalendar(monthsList[i], year)
		   calContainer.innerHTML += newCalendar
		  }
		}
		
		
		function getNextFourMonths() {
		 var currentMonthLabel = '<h6 class="month-label active-month-label" id="'+ currentMonth + '-label" onclick="toggleMonths('+ currentMonth +')" >' + `${monthNames[currentMonth]}` + '</h6>'
		 monthListDiv.innerHTML += currentMonthLabel;
		 var monthsList = []; 
		 var monthsNumberList = []
		 
		 for (var i = 0; i < 4; i++) {
		     var nextMonth = (currentMonth + 1 + i) % 12; 
		     monthsNumberList.push(nextMonth)
		     var nextMonthName = new Date(0, nextMonth).toLocaleDateString('en-US', { month: 'long' }); 
		     monthsList.push(nextMonthName); 
		 }
		
		 for (var i = 0; i < monthsNumberList.length; i++){
		   var workingMonth = monthNames[monthsNumberList[i]]
		   var monthLabel = '<h6 class="month-label" onclick="toggleMonths('+ monthsNumberList[i] +')" id="'+ monthsNumberList[i] +'-label">' + monthsList[i] + '</h6>'
		   monthListDiv.innerHTML +=  monthLabel ;
		 }
		 createNextFourCalendars(monthsNumberList)
		 return monthsList
		
		}
		var nextFourMonths = getNextFourMonths();
		
	
	    
	
	
	    function toggleMonths(monthName){
		 var id = monthName + '-table';
		 var labelId = monthName + '-label'
		 $('.active-calendar-table').addClass('hidden-calendar-table')
		 $('.active-calendar-table').removeClass('active-calendar-table')
		 $('#' + id).addClass('active-calendar-table')
		 $('.active-month-label').removeClass('active-month-label')
		 $('#' + labelId).addClass('active-month-label')
		}
		
		var clickableMonths = document.getElementsByClassName('month-label')
		
		function mobilizeCalendar(){
		 var windowWidth = $(window).width()
		 
		 if (windowWidth < 1000){

		 } else {
		   
	    
		 }
		 
		}
		$(document).ready(mobilizeCalendar)
		window.addEventListener('resize', mobilizeCalendar)
	    function colorCalendar(){
		 var dateCells = document.getElementsByClassName('date-cell');
		 var counter = 1;
		 for (var i = 0; i < dateCells.length; i++){
		   counter++;
		   if (counter > 3){
		     counter = 1;
		   }
		   if (counter === 1){
		     dateCells[i].classList.add("cal-color-1")
		     
		   } else if (counter === 2) {
		     dateCells[i].classList.add("cal-color-2")
		     
		   } else if (counter === 3) {
		     
		     dateCells[i].classList.add('cal-color-3')
		   }
		 }
		 
		}
		colorCalendar();
	
	    
</script>
